name: Build

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  DotNetVersion: "6.0.x"
  BuildConfiguration: "Release"
  BuildParameters: "/clp:NoSummary /p:Configuration=Release /p:BuildVersion=${{ github.run_id }} /p:BuildBranch=${{ github.ref }}"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNetVersion }}

    - name: Build PabloDraw
      run: dotnet publish Source/PabloDraw/PabloDraw.csproj ${{ env.BuildParameters }} /bl:artifacts/log/pablodraw-windows.binlog

    - name: Build PabloDraw.Console
      run: dotnet publish Source/PabloDraw.Console/PabloDraw.Console.csproj ${{ env.BuildParameters }} /bl:artifacts/log/pablodraw.console-windows.binlog

    - uses: actions/upload-artifact@v2
      with:
        name: pablodraw-windows-x64
        path: |
          artifacts/bin/PabloDraw/${{ env.BuildConfiguration }}/net6.0-windows/win-x64/publish/*
          artifacts/bin/PabloDraw.Console/${{ env.BuildConfiguration }}/net6.0-windows/win-x64/publish/*

    - name: Upload log files
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: log
        path: artifacts/log/**/*

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNetVersion }}

    - name: Build PabloDraw
      run: dotnet publish Source/PabloDraw/PabloDraw.csproj ${{ env.BuildParameters }} /bl:artifacts/log/pablodraw-linux.binlog

    - name: Build PabloDraw.Console
      run: dotnet publish Source/PabloDraw.Console/PabloDraw.Console.csproj ${{ env.BuildParameters }} /bl:artifacts/log/pablodraw.console-linux.binlog

    - uses: actions/upload-artifact@v2
      with:
        name: pablodraw-linux-x64
        path: |
          artifacts/bin/PabloDraw/${{ env.BuildConfiguration }}/net6.0/linux-x64/publish/*
          artifacts/bin/PabloDraw.Console/${{ env.BuildConfiguration }}/net6.0/linux-x64/publish/*

    - name: Upload log files
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: log
        path: artifacts/log/**/*

  build-mac:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DotNetVersion }}

    - uses: maxim-lobanov/setup-xamarin@v1
      with:
        mono-version: latest
        xamarin-mac-version: latest
        xcode-version: 13.1

    - name: Import code signing certificate
      if: github.event_name != 'pull_request'
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.DEVID_CERTIFICATE_P12 }}
        p12-password: ${{ secrets.DEVID_CERTIFICATE_P12_PASSWORD }}

    - name: Enable code signing
      if: github.event_name != 'pull_request'
      run: echo "BuildParameters=${{ env.BuildParameters }} /p:EnableCodeSigning=True" >> $GITHUB_ENV

    - name: Set notarization credentials
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        xcrun altool --store-password-in-keychain-item "AC_PASSWORD" -u "${{ secrets.AC_USERNAME }}" -p "${{ secrets.AC_PASSWORD }}"
        echo "BuildParameters=${{ env.BuildParameters }} /p:EnableNotarization=True" >> $GITHUB_ENV

    - name: Build PabloDraw
      run: dotnet build Source/PabloDraw/PabloDraw.csproj ${{ env.BuildParameters }} /bl:artifacts/log/pablodraw-mac.binlog

    - name: Build PabloDraw.Console
      run: dotnet publish Source/PabloDraw.Console/PabloDraw.Console.csproj ${{ env.BuildParameters }} /bl:artifacts/log/pablodraw.console-mac.binlog

    - uses: actions/upload-artifact@v2
      with:
        name: pablodraw-mac
        path: |
          artifacts/bin/PabloDraw/${{ env.BuildConfiguration }}/net6.0/osx-x64/PabloDraw.dmg
          artifacts/bin/PabloDraw.Console/${{ env.BuildConfiguration }}/net6.0/osx-x64/publish/PabloDraw.Console

    - name: Upload log files
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: log
        path: artifacts/log/**/*
        
  update-release:
    needs: [ build-windows, build-mac, build-linux ]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    steps:
      - id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - id: get_release
        uses: bruceadams/get-release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - uses: actions/download-artifact@v2

      # - uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.get_release.outputs.upload_url }}
      #     asset_path: 
      #     asset_name: 
      #     asset_content_type: application/octet-stream
